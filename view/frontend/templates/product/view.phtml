<?php if ($block->showCustomizeButton()): ?>
    <div class="product-designer-button-container">
        <button type="button" class="action primary product-designer-button product-designer-customize">
            <span>
                <span><?php echo __('Customize It') ?></span>
            </span>
        </button>
    </div>
    <div id="dd-designer-container" style="display:none;">

        <div id="dd-designer">

        </div>

    </div>
    <script type="text/javascript">
        require([
            'jquery',
            'jquery/ui',
            'Magento_Ui/js/modal/modal',
            'underscore',
            'desgnerModule'

        ], function ($, ui, modal, _, _designer) {

            var parentProductId = '<?php echo $block->getProduct()->getId(); ?>';
            var defaultConfiguration = <?php echo $block->getDesignerConfiguration($block->getProduct()); ?>

            console.log('defaultConfiguration');
            console.log(defaultConfiguration);

            $('.product-designer-button').on('click', function () {
                var valid = $('#product_addtocart_form').valid();
                if (valid) {
                    var options = {
                        type: 'popup',
                        responsive: true,
                        innerScroll: true,
                        modalClass: 'dd-designer-modal'
                    };

                    var selected_options = {};

    <?php if ($this->getProduct()->getTypeId() == 'configurable'): ?>

                        $('div.swatch-attribute').each(function (k, v) {
                            var attribute_id = $(v).attr('attribute-id');
                            var option_selected = $(v).attr('option-selected');
                            //console.log(attribute_id, option_selected);
                            if (!attribute_id || !option_selected) {
                                return;
                            }
                            selected_options[attribute_id] = option_selected;
                        });

                        var product_id_index = $('[data-role=swatch-options]').data('mageSwatchRenderer').options.jsonConfig.index;
                        var found_ids = [];
                        $.each(product_id_index, function (product_id, attributes) {
                            var productIsSelected = function (attributes, selected_options) {
                                return _.isEqual(attributes, selected_options);
                            }
                            if (productIsSelected(attributes, selected_options)) {
                                found_ids.push(product_id);
                            }
                        });
                        parentProductId = found_ids[0];

    <?php else: ?>
                        console.log('parentProductId: ' + parentProductId);

    <?php endif; ?>


                    var popup = modal(options, $('#dd-designer-container'));
                    $('#dd-designer').html('<span class="dd-designer-loading"><?php echo __('Loading') ?>...</span>');


                    var imgsConfiguration = findConf(defaultConfiguration, parentProductId);

                    if (!imgsConfiguration || !imgsConfiguration.imgs) {
                        $('#dd-designer').html('<div class="dd-designer-no-config"><?php echo __('No Images found for this product!'); ?></div>');
                    } else {
                        console.log(imgsConfiguration);
                        var defaultImage = imgsConfiguration.imgs[0];
                        setTimeout(function () {
                            initDesigner(defaultImage)
                        }, 500);
                    }

                    $('#dd-designer-container').modal('openModal');

                    function findConf(defaultConf, productId) {
                        var _currConf = false;
                        $.each(defaultConf, function (i, conf) {
                            if (conf.product_id == productId) {
                                _currConf = conf;
                            }
                        });

                        return _currConf;
                    }

                    function initDesigner(img) {
                        $('#dd-designer').html('');
                        $('#dd-designer').empty();
                        var designer = $('#dd-designer').dd_productdesigner({
                            'src': img.src,
                            'width': img.sizes.width,
                            'height': img.sizes.height,

                            'sku': img.sku,
                            'product_id': img.product_id,
                            'media_id': img.media_id,
                            'group_index': img.group_index,
                            'mask': img.mask,
                            'conf': img.conf,
                            'settings': {
                                'listFonts': <?php echo json_encode($this->getFonts()); ?>,
                                'urlUploadImages': '<?php echo $this->getUploadFileUrl(); ?>',
                                'myFilesPath': '<?php echo $this->getMyFilesUrl() ?>'
                            }

                        });


                        designer.init();
                    }
                }
                return;
            });

        });
    </script>
<?php endif; ?>
